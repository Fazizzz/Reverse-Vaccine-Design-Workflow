pull(selection)
View(cont)
# Load required libraries
library(readr)
library(dplyr)
library(stringr)
# Load data
cont <- read_csv("ElliPro Continuous Prediction results.csv")
disc <- read_csv("ElliPro Discontinuous Prediction results.csv")
continuous_lines <- cont %>%
slice(1:5) %>%
mutate(Epitope_ID = 1:5) %>%
rowwise() %>%
mutate(selection = {
start_res <- Start[[1]]
end_res <- End[[1]]
chain_id <- Chain[[1]]
res_indices <- seq(start_res, end_res)
paste0("select @", paste0(Chain, ":", res_indices, collapse = ","),
" name continuous_epitope_", Epitope_ID)
}) %>%
pull(selection)
# Save to file
writeLines(continuous_lines, "continuous_epitopes.cxc")
# Create ChimeraX-style selections from top 5 discontinuous epitopes
discontinuous_lines <- disc %>%
slice(1:5) %>%
mutate(Epitope_ID = 1:5) %>%
rowwise() %>%
mutate(selection = {
clean_res <- gsub("\\s", "", Residues)
clean_res <- unlist(strsplit(clean_res, ","))
paste0("select @", paste(clean_res, collapse = ","),
" name discontinuous_epitope_", Epitope_ID)
}) %>%
pull(selection)
# Save to file
writeLines(discontinuous_lines, "discontinuous_epitopes.cxc")
# Load required libraries
library(readr)
library(dplyr)
library(stringr)
# Load data
cont <- read_csv("ElliPro Continuous Prediction results.csv")
disc <- read_csv("ElliPro Discontinuous Prediction results.csv")
# Predefine colors for top 5 epitopes
colors <- c("red", "orange", "green", "blue", "magenta")
continuous_epitopes <- cont %>%
slice(1:5) %>%
mutate(Epitope_ID = 1:5)
# Header lines for ChimeraX setup
header_lines <- c(
"set bgColor white",
"lighting soft",
"color gray cartoon",
"hide",
"show cartoon"
)
# Generate selection, coloring, and labeling commands
continuous_lines <- continuous_epitopes %>%
rowwise() %>%
mutate(commands = {
res_indices <- seq(Start, End)
selection <- paste0(Chain, ":", res_indices, collapse = ",")
c(
paste0("select @", selection, " name continuous_epitope_", Epitope_ID),
paste0("color ", colors[Epitope_ID], " @", selection),
paste0("label create continuous_epitope_", Epitope_ID, " position center text 'Epitope ", Epitope_ID, "' color ", colors[Epitope_ID])
)
}) %>%
pull(commands) %>%
unlist()
# Generate selection, coloring, and labeling commands
continuous_lines <- continuous_epitopes %>%
rowwise() %>%
mutate(commands = {
start_res <- Start[[1]]
end_res <- End[[1]]
chain_id <- Chain[[1]]
res_indices <- seq(start_res, end_res)
selection <- paste0(Chain, ":", res_indices, collapse = ",")
c(
paste0("select @", selection, " name continuous_epitope_", Epitope_ID),
paste0("color ", colors[Epitope_ID], " @", selection),
paste0("label create continuous_epitope_", Epitope_ID, " position center text 'Epitope ", Epitope_ID, "' color ", colors[Epitope_ID])
)
}) %>%
pull(commands) %>%
unlist()
discontinuous_epitopes <- disc %>%
slice(1:5) %>%
mutate(Epitope_ID = 1:5)
discontinuous_lines <- discontinuous_epitopes %>%
rowwise() %>%
mutate(commands = {
clean_res <- gsub("\\s", "", Residues)
clean_res <- unlist(strsplit(clean_res, ","))
selection <- paste(clean_res, collapse = ",")
c(
paste0("select @", selection, " name discontinuous_epitope_", Epitope_ID),
paste0("color ", colors[Epitope_ID], " @", selection),
paste0("label create discontinuous_epitope_", Epitope_ID, " position center text 'Epitope ", Epitope_ID, "' color ", colors[Epitope_ID])
)
}) %>%
pull(commands) %>%
unlist()
# Load data
cont <- read_csv("ElliPro Continuous Prediction results.csv")
disc <- read_csv("ElliPro Discontinuous Prediction results.csv")
continuous_epitopes <- cont %>%
slice(1:5) %>%
mutate(Epitope_ID = 1:5)
# Initialize list to hold commands
continuous_lines <- list()
for (i in 1:nrow(continuous_epitopes)) {
ep <- continuous_epitopes[i, ]
res_indices <- seq(ep$Start, ep$End)
selection <- paste0(ep$Chain, ":", res_indices, collapse = ",")
continuous_lines <- append(continuous_lines, list(
paste0("select @", selection, " name continuous_epitope_", ep$Epitope_ID),
paste0("color ", colors[ep$Epitope_ID], " @", selection),
paste0("label create continuous_epitope_", ep$Epitope_ID, " position center text 'Epitope ", ep$Epitope_ID, "' color ", colors[ep$Epitope_ID])
))
}
# Header lines for ChimeraX setup
header_lines <- c(
"set bgColor white",
"lighting soft",
"color gray cartoon",
"hide",
"show cartoon"
)
# Initialize list to hold commands
continuous_lines <- list()
for (i in 1:nrow(continuous_epitopes)) {
ep <- continuous_epitopes[i, ]
res_indices <- seq(ep$Start, ep$End)
selection <- paste0(ep$Chain, ":", res_indices, collapse = ",")
continuous_lines <- append(continuous_lines, list(
paste0("select @", selection, " name continuous_epitope_", ep$Epitope_ID),
paste0("color ", colors[ep$Epitope_ID], " @", selection),
paste0("label create continuous_epitope_", ep$Epitope_ID, " position center text 'Epitope ", ep$Epitope_ID, "' color ", colors[ep$Epitope_ID])
))
}
# Load required libraries
library(readr)
library(dplyr)
library(stringr)
# Load ElliPro prediction data
cont <- read_csv("ElliPro Continuous Prediction results.csv")
disc <- read_csv("ElliPro Discontinuous Prediction results.csv")
# Define consistent color set for top 5 epitopes
epitope_colors <- c("red", "blue", "green", "orange", "purple")
# Header lines for ChimeraX setup
header_lines <- c(
"set bgColor white",
"lighting soft",
"color gray cartoon",
"hide",
"show cartoon"
)
### ---- CONTINUOUS EPITOPES ---- ###
# Top 5
continuous_epitopes <- cont %>%
slice(1:5) %>%
mutate(Epitope_ID = 1:5)
# Build ChimeraX commands
continuous_lines <- list()
# Add header
continuous_lines <- c(continuous_lines, header_lines)
# Loop to create commands for each epitope
for (i in 1:nrow(continuous_epitopes)) {
ep <- continuous_epitopes[i, ]
res_indices <- seq(ep$Start, ep$End)
selection <- paste0(ep$Chain, ":", res_indices, collapse = ",")
ep_id <- ep$Epitope_ID
color <- epitope_colors[ep_id]
continuous_lines <- append(continuous_lines, list(
paste0("select @", selection, " name continuous_epitope_", ep_id),
paste0("color ", color, " @", selection),
paste0("label create continuous_epitope_", ep_id,
" position center text 'Epitope ", ep_id, "' color ", color)
))
}
# Save to file
writeLines(continuous_lines, "continuous_epitopes.cxc")
View(continuous_lines)
### ---- DISCONTINUOUS EPITOPES ---- ###
# Top 5
discontinuous_epitopes <- disc %>%
slice(1:5) %>%
mutate(Epitope_ID = 1:5)
# Build ChimeraX commands
discontinuous_lines <- list()
# Add header
discontinuous_lines <- c(discontinuous_lines, header_lines)
# Loop to create commands for each epitope
for (i in 1:nrow(discontinuous_epitopes)) {
ep <- discontinuous_epitopes[i, ]
clean_res <- gsub("\\s", "", ep$Residues)
res_list <- unlist(strsplit(clean_res, ","))
selection <- paste(res_list, collapse = ",")
ep_id <- ep$Epitope_ID
color <- epitope_colors[ep_id]
discontinuous_lines <- append(discontinuous_lines, list(
paste0("select @", selection, " name discontinuous_epitope_", ep_id),
paste0("color ", color, " @", selection),
paste0("label create discontinuous_epitope_", ep_id,
" position center text 'Epitope ", ep_id, "' color ", color)
))
}
# Save to file
writeLines(discontinuous_lines, "discontinuous_epitopes.cxc")
# Save to file
writeLines(unlist(discontinuous_lines), "discontinuous_epitopes.cxc")
# Save to file
writeLines(unlist(continuous_lines), "continuous_epitopes.cxc")
continuous_lines <- cont %>%
slice(1:5) %>%
mutate(Epitope_ID = 1:5) %>%
rowwise() %>%
mutate(selection = {
start_res <- Start[[1]]
end_res <- End[[1]]
chain_id <- Chain[[1]]
res_indices <- seq(start_res, end_res)
paste0("select @", paste0(Chain, ":", res_indices, collapse = ","),
" name continuous_epitope_", Epitope_ID)
}) %>%
pull(selection)
# Save to file
writeLines(continuous_lines, "og-continuous_epitopes.cxc")
# Load required libraries
library(readr)
library(dplyr)
library(stringr)
# Load ElliPro prediction data
cont <- read_csv("ElliPro Continuous Prediction results.csv")
disc <- read_csv("ElliPro Discontinuous Prediction results.csv")
# Define consistent color set for top 5 epitopes
epitope_colors <- c("red", "blue", "green", "orange", "purple")
# Header lines for ChimeraX setup
header_lines <- c(
"set bgColor white",
"lighting soft",
"color gray cartoon",
"hide",
"show cartoon"
)
### ---- CONTINUOUS EPITOPES ---- ###
# Top 5
continuous_epitopes <- cont %>%
slice(1:5) %>%
mutate(Epitope_ID = 1:5)
# Build ChimeraX commands
continuous_lines <- list()
# Add header
continuous_lines <- c(continuous_lines, header_lines)
# Loop to create commands for each epitope
for (i in 1:nrow(continuous_epitopes)) {
ep <- continuous_epitopes[i, ]
res_indices <- seq(ep$Start, ep$End)
selection <- paste0(ep$Chain, ":", res_indices, collapse = ",")
ep_id <- ep$Epitope_ID
color <- epitope_colors[ep_id]
continuous_lines <- append(continuous_lines, list(
paste0("name continuous_epitope_", ep_id, selection),
paste0("color ","name continuous_epitope_", ep_id, color)
))
}
# Save to file
writeLines(unlist(continuous_lines), "continuous_epitopes.cxc")
# Load ElliPro prediction data
cont <- read_csv("ElliPro Continuous Prediction results.csv")
disc <- read_csv("ElliPro Discontinuous Prediction results.csv")
# Define consistent color set for top 5 epitopes
epitope_colors <- c("red", "blue", "green", "orange", "purple")
# Header lines for ChimeraX setup
header_lines <- c(
"set bgColor white",
"lighting soft",
"color gray cartoon",
"hide",
"show cartoon"
)
### ---- CONTINUOUS EPITOPES ---- ###
# Top 5
continuous_epitopes <- cont %>%
slice(1:5) %>%
mutate(Epitope_ID = 1:5)
# Build ChimeraX commands
continuous_lines <- list()
# Add header
continuous_lines <- c(continuous_lines, header_lines)
# Loop to create commands for each epitope
for (i in 1:nrow(continuous_epitopes)) {
ep <- continuous_epitopes[i, ]
res_indices <- seq(ep$Start, ep$End)
selection <- paste0(ep$Chain, ":", res_indices, collapse = ",")
ep_id <- ep$Epitope_ID
color <- epitope_colors[ep_id]
continuous_lines <- append(continuous_lines, list(
paste0("name continuous_epitope_",ep_id," @", selection),
paste0("color ","continuous_epitope_",ep_id," ", color)
))
}
# Save to file
writeLines(unlist(continuous_lines), "continuous_epitopes.cxc")
### ---- DISCONTINUOUS EPITOPES ---- ###
# Top 5
discontinuous_epitopes <- disc %>%
slice(1:5) %>%
mutate(Epitope_ID = 1:5)
# Build ChimeraX commands
discontinuous_lines <- list()
# Add header
discontinuous_lines <- c(discontinuous_lines, header_lines)
# Loop to create commands for each epitope
for (i in 1:nrow(discontinuous_epitopes)) {
ep <- discontinuous_epitopes[i, ]
clean_res <- gsub("\\s", "", ep$Residues)
res_list <- unlist(strsplit(clean_res, ","))
selection <- paste(res_list, collapse = ",")
ep_id <- ep$Epitope_ID
color <- epitope_colors[ep_id]
discontinuous_lines <- append(discontinuous_lines, list(
paste0("name discontinuous_epitope_",ep_id," @", selection),
paste0("color ","discontinuous_epitope_",ep_id," ", color)
))
}
# Save to file
writeLines(unlist(discontinuous_lines), "discontinuous_epitopes.cxc")
# Load required libraries
library(readr)
library(dplyr)
library(stringr)
# Load data
cont <- read_csv("ElliPro Continuous Prediction results.csv")
disc <- read_csv("ElliPro Discontinuous Prediction results.csv")
continuous_lines <- cont %>%
slice(1:5) %>%
mutate(Epitope_ID = 1:5) %>%
rowwise() %>%
mutate(selection = {
start_res <- Start[[1]]
end_res <- End[[1]]
chain_id <- Chain[[1]]
res_indices <- seq(start_res, end_res)
paste0("select @", paste0(Chain, ":", res_indices, collapse = ","),
" name continuous_epitope_", Epitope_ID)
}) %>%
pull(selection)
# Load required libraries
library(readr)
library(dplyr)
library(stringr)
# Load ElliPro prediction data
cont <- read_csv("ElliPro Continuous Prediction results.csv")
disc <- read_csv("ElliPro Discontinuous Prediction results.csv")
# Define consistent color set for top 5 epitopes
epitope_colors <- c("red", "blue", "green", "orange", "purple")
# Header lines for ChimeraX setup
header_lines <- c(
"set bgColor white",
"lighting soft",
"color gray cartoon",
"hide",
"show cartoon"
)
### ---- CONTINUOUS EPITOPES ---- ###
# Top 5
continuous_epitopes <- cont %>%
slice(1:5) %>%
mutate(Epitope_ID = 1:5)
# Build ChimeraX commands
continuous_lines <- list()
# Add header
continuous_lines <- c(continuous_lines, header_lines)
# Loop to create commands for each epitope
for (i in 1:nrow(continuous_epitopes)) {
ep <- continuous_epitopes[i, ]
res_indices <- seq(ep$Start, ep$End)
selection <- paste0(ep$Chain, ":", res_indices, collapse = ",")
ep_id <- ep$Epitope_ID
color <- epitope_colors[ep_id]
continuous_lines <- append(continuous_lines, list(
paste0("name continuous_epitope_",ep_id," @", selection),
paste0("color ","continuous_epitope_",ep_id," ", color)
))
}
# Save to file
writeLines(unlist(continuous_lines), "continuous_epitopes.cxc")
### ---- DISCONTINUOUS EPITOPES ---- ###
# Top 5
discontinuous_epitopes <- disc %>%
slice(1:5) %>%
mutate(Epitope_ID = 1:5)
# Build ChimeraX commands
discontinuous_lines <- list()
# Add header
discontinuous_lines <- c(discontinuous_lines, header_lines)
# Loop to create commands for each epitope
for (i in 1:nrow(discontinuous_epitopes)) {
ep <- discontinuous_epitopes[i, ]
clean_res <- gsub("\\s", "", ep$Residues)
res_list <- unlist(strsplit(clean_res, ","))
selection <- paste(res_list, collapse = ",")
ep_id <- ep$Epitope_ID
color <- epitope_colors[ep_id]
discontinuous_lines <- append(discontinuous_lines, list(
paste0("name discontinuous_epitope_",ep_id," @", selection),
paste0("color ","discontinuous_epitope_",ep_id," ", color)
))
}
# Save to file
writeLines(unlist(discontinuous_lines), "discontinuous_epitopes.cxc")
### ---- DISCONTINUOUS EPITOPES ---- ###
# Top 5
discontinuous_epitopes <- disc %>%
slice(1:5) %>%
mutate(Epitope_ID = 1:5)
# Build ChimeraX commands
discontinuous_lines <- list()
# Add header
discontinuous_lines <- c(discontinuous_lines, header_lines)
# Build ChimeraX commands
discontinuous_lines <- list()
# Add header
discontinuous_lines <- c(discontinuous_lines, header_lines)
# Loop to create commands for each epitope
for (i in 1:nrow(discontinuous_epitopes)) {
ep <- discontinuous_epitopes[i, ]
clean_res <- gsub("\\s", "", ep$Residues)
res_list <- unlist(strsplit(clean_res, ","))
# Strip residue names (e.g., convert X:G18 -> X:18)
res_list_cleaned <- gsub("([A-Z]):[A-Z]+(\\d+)", "\\1:\\2", res_list)
selection <- paste(res_list_cleaned, collapse = ",")
ep_id <- ep$Epitope_ID
color <- epitope_colors[ep_id]
discontinuous_lines <- append(discontinuous_lines, list(
paste0("name discontinuous_epitope_", ep_id, " @", selection),
paste0("color discontinuous_epitope_", ep_id, " ", color)
))
}
# Save to file
writeLines(unlist(discontinuous_lines), "discontinuous_epitopes.cxc")
# Load required libraries
library(readr)
library(dplyr)
library(stringr)
# Load ElliPro prediction data
cont <- read_csv("ElliPro Continuous Prediction results.csv")
disc <- read_csv("ElliPro Discontinuous Prediction results.csv")
# Define consistent color set for top 5 epitopes
epitope_colors <- c("red", "blue", "green", "orange", "purple")
# Header lines for ChimeraX setup
header_lines <- c(
"set bgColor white",
"lighting soft",
"color gray cartoon",
"hide",
"show cartoon"
)
### ---- CONTINUOUS EPITOPES ---- ###
# Top 5
continuous_epitopes <- cont %>%
slice(1:5) %>%
mutate(Epitope_ID = 1:5)
# Build ChimeraX commands
continuous_lines <- list()
# Add header
continuous_lines <- c(continuous_lines, header_lines)
# Loop to create commands for each epitope
for (i in 1:nrow(continuous_epitopes)) {
ep <- continuous_epitopes[i, ]
res_indices <- seq(ep$Start, ep$End)
selection <- paste0(ep$Chain, ":", res_indices, collapse = ",")
ep_id <- ep$Epitope_ID
color <- epitope_colors[ep_id]
continuous_lines <- append(continuous_lines, list(
paste0("name continuous_epitope_",ep_id," @", selection),
paste0("color ","continuous_epitope_",ep_id," ", color)
))
}
# Save to file
writeLines(unlist(continuous_lines), "continuous_epitopes.cxc")
### ---- DISCONTINUOUS EPITOPES ---- ###
# Top 5
discontinuous_epitopes <- disc %>%
slice(1:5) %>%
mutate(Epitope_ID = 1:5)
# Build ChimeraX commands
discontinuous_lines <- list()
# Add header
discontinuous_lines <- c(discontinuous_lines, header_lines)
# Loop to create commands for each epitope
for (i in 1:nrow(discontinuous_epitopes)) {
ep <- discontinuous_epitopes[i, ]
clean_res <- gsub("\\s", "", ep$Residues)
res_list <- unlist(strsplit(clean_res, ","))
# Strip residue names (e.g., convert X:G18 -> X:18)
res_list_cleaned <- gsub("([A-Z]):[A-Z]+(\\d+)", "\\1:\\2", res_list)
selection <- paste(res_list_cleaned, collapse = ",")
ep_id <- ep$Epitope_ID
color <- epitope_colors[ep_id]
discontinuous_lines <- append(discontinuous_lines, list(
paste0("name discontinuous_epitope_", ep_id, " @", selection),
paste0("color discontinuous_epitope_", ep_id, " ", color)
))
}
# Save to file
writeLines(unlist(discontinuous_lines), "discontinuous_epitopes.cxc")
